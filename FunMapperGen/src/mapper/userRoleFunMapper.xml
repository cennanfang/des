<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cen.anno.orm.mapper.UserRoleFunMapper">

	<!-- 结果集 -->
	<resultMap id="userRoleResult" type="com.cen.anno.orm.model.UserRole">
		<id property="id" column="id" />
		<result property="available" column="available" />
		<result property="createDate" column="create_date" />
		<result property="updateDate" column="update_date" />
		<association property="user" column="user_id" javaType="User" select="selectUser"/>
		<association property="role" column="role_id" javaType="Role" select="selectRole"/>
	</resultMap>

	<select id="selectUser" resultMap="com.cen.anno.orm.mapper.UserFunMapper.userResult">
		select * from t_user where id=#{id}
	</select>

	<select id="selectRole" resultMap="com.cen.anno.orm.mapper.RoleFunMapper.roleResult">
		select * from t_role where id=#{id}
	</select>

	<select id="select" parameterType="Integer" resultMap="userRoleResult">
		select * from t_user_role where id=#{id}
	</select>

 	<select id="selectParam" parameterType="java.util.Map" resultType="com.cen.anno.orm.model.UserRole">
		select * from userRole
		<trim prefix="where" prefixOverrides="and">
		<where>	
			<choose>
			<when test="stringUseLike != null and stringUseLike = 1">
				<if test="id != null">and id=#{id}</if>
				<if test="user.id != null">and user_id=#{user.id}</if>
				<if test="role.id != null">and role_id=#{role.id}</if>
				<if test="available != null">and available like #{available}</if>
				<if test="createDate != null">and create_date=#{createDate}</if>
				<if test="updateDate != null">and update_date=#{updateDate}</if>
			</when>
			<otherwise>
				<if test="id != null">and id=#{id}</if>
				<if test="user.id != null">and user_id=#{user.id}</if>
				<if test="role.id != null">and role_id=#{role.id}</if>
				<if test="available != null">and available=#{available}</if>
				<if test="createDate != null">and create_date=#{createDate}</if>
				<if test="updateDate != null">and update_date=#{updateDate}</if>
			</otherwise>
			</choose>
		</where>
		</trim>
		<if test="orderColumn != null">
 			order by ${orderColumn}
 			<if test="orderTurn != null">
 				${orderTurn}
 			</if>
 		</if>
 	</select> 

	<insert id="insert" parameterType="com.cen.anno.orm.model.UserRole">
		insert into t_user_role(user_id, role_id, available, create_date, update_date) values(#{user.id}, #{role.id}, #{available}, #{createDate}, #{updateDate})
	</insert>

	<insert id="insertBatch" parameterType="java.util.List" useGeneratedKeys="true" keyProperty="id">
		insert into t_user_role(user_id, role_id, available, create_date, update_date) values
		<foreach item="item" collection="list" separator=", ">
			(#{user.id}, #{role.id}, #{available}, #{createDate}, #{updateDate})
		</foreach>
	</insert>

	<update id="update" parameterType="com.cen.anno.orm.model.UserRole">
		update t_user_role
		<trim prefix="set" suffixOverrides=",">
		<set>
			<if test="user.id != null">user_id=#{user.id},</if>
			<if test="role.id != null">role_id=#{role.id},</if>
			<if test="available != null">available=#{available},</if>
			<if test="createDate != null">create_date=#{createDate},</if>
			<if test="updateDate != null">update_date=#{updateDate},</if>
		</set>
		</trim>
		where id=#{id}
	</update>

	<update id="updateBatch" parameterType="java.util.List">
		<foreach collection="list" item="com.cen.anno.orm.model.UserRole" separator=";">
		update t_user_role
		<trim prefix="set" suffixOverrides=",">
		<set>
			<if test="user.id != null">user_id=#{user.id},</if>
			<if test="role.id != null">role_id=#{role.id},</if>
			<if test="available != null">available=#{available},</if>
			<if test="createDate != null">create_date=#{createDate},</if>
			<if test="updateDate != null">update_date=#{updateDate},</if>
		</set>
		</trim>
		where id=#{id}
		</foreach>
	</update>

	<delete id="delete" parameterType="Integer">
		delete from t_user_role where id=#{id}
	</delete>

	<delete id="deleteParam" parameterType="java.util.Map">
		delete from t_user_role
		<trim prefix="where" prefixOverrides="and">
		<where>	
			<choose>
			<when test="stringUseLike != null and stringUseLike = 1">
				<if test="id != null">and id=#{id}</if>
				<if test="user.id != null">and user_id=#{user.id}</if>
				<if test="role.id != null">and role_id=#{role.id}</if>
				<if test="available != null">and available like #{available}</if>
				<if test="createDate != null">and create_date=#{createDate}</if>
				<if test="updateDate != null">and update_date=#{updateDate}</if>
			</when>
			<otherwise>
				<if test="id != null">and id=#{id}</if>
				<if test="user.id != null">and user_id=#{user.id}</if>
				<if test="role.id != null">and role_id=#{role.id}</if>
				<if test="available != null">and available=#{available}</if>
				<if test="createDate != null">and create_date=#{createDate}</if>
				<if test="updateDate != null">and update_date=#{updateDate}</if>
			</otherwise>
			</choose>
		</where>
		</trim>

	</delete>
	<delete id="deleteBatch" parameterType="java.util.List">
		delete from t_user_role where id in 
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<foreach collection="list" item="pk" separator=","> 
 				#{pk}
			</foreach>
		</trim>
	</delete>

	<select id="count" resultType="int">
		select count(*) from t_user_role
	</select>

	<select id="countParam" parameterType="java.util.Map" resultType="int">
		select count(*) from t_user_role
		<where>
			<choose>
			<when test="stringUseLike != null and stringUseLike = 1">
				<if test="id != null">and id=#{id}</if>
				<if test="user.id != null">and user_id=#{user.id}</if>
				<if test="role.id != null">and role_id=#{role.id}</if>
				<if test="available != null">and available like #{available}</if>
				<if test="createDate != null">and create_date=#{createDate}</if>
				<if test="updateDate != null">and update_date=#{updateDate}</if>
			</when>
			<otherwise>
				<if test="id != null">and id=#{id}</if>
				<if test="user.id != null">and user_id=#{user.id}</if>
				<if test="role.id != null">and role_id=#{role.id}</if>
				<if test="available != null">and available=#{available}</if>
				<if test="createDate != null">and create_date=#{createDate}</if>
				<if test="updateDate != null">and update_date=#{updateDate}</if>
			</otherwise>
			</choose>
		</where>
	</select>

</mapper>
